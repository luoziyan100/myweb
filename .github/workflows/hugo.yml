# GitHub Actions工作流，自动构建和部署Hugo网站
name: Deploy Hugo site to Pages

on:
  # 当推送到主分支时触发
  push:
    branches: [ master ]
  # 允许手动触发
  workflow_dispatch:

# 设置GitHub Actions权限
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个部署任务同时运行
concurrency:
  group: "pages"
  cancel-in-progress: false

# 默认使用bash
defaults:
  run:
    shell: bash

jobs:
  # 构建任务
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.149.0
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: 安装Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: 安装Dart Sass
        run: sudo snap install dart-sass

      - name: 设置Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: 安装Node.js依赖
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: 构建Hugo网站
        env:
          # 为了相对URL
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: 上传构建结果
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./public

  # 部署任务
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 部署到GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3